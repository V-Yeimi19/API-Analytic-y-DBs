version: "3.9"

services:
  # ==========================
  # MYSQL DATABASE
  # ==========================
  mysql-db:
    image: yiyi19/primac-mysql:latest
    build:
      context: ./databases/BD_Users_Primac
      dockerfile: Dockerfile
    container_name: primac_mysql_db
    ports:
      - "${MYSQL_PORT:-8123}:3306"
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE:-primac}
      MYSQL_USER: ${MYSQL_USER:-admin}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-admin}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-root}
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - primac_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 30s
      timeout: 10s
      retries: 5

  # ==========================
  # POSTGRESQL DATABASE
  # ==========================
  postgresql-db:
    image: yiyi19/primac-postgres:latest
    build:
      context: ./databases/proyecto_postgresql
      dockerfile: Dockerfile
    container_name: primac_postgresql_db
    ports:
      - "${POSTGRES_PORT:-8123}:5432"
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-primac_postgres}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
    volumes:
      - postgresql_data:/var/lib/postgresql/data
    networks:
      - primac_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 30s
      timeout: 10s
      retries: 5

  # ==========================
  # CASSANDRA DATABASE + SETUP + FAKE DATA
  # ==========================
  cassandra-db:
    image: yiyi19/primac-cassandra:latest
    build:
      context: ./databases/Primac-Claims-Payments-DB
    container_name: primac_cassandra_db
    ports:
      - "${CASSANDRA_PORT:-8123}:9042"
    environment:
      - CASSANDRA_CLUSTER_NAME=${CASSANDRA_CLUSTER_NAME:-primac-cluster}
      - CASSANDRA_NUM_TOKENS=${CASSANDRA_NUM_TOKENS:-128}
      - CASSANDRA_START_RPC=${CASSANDRA_START_RPC:-true}
    volumes:
      - cassandra_data:/var/lib/cassandra
    networks:
      - primac_network
    healthcheck:
      test: ["CMD", "cqlsh", "-e", "DESCRIBE KEYSPACES"]
      interval: 15s
      timeout: 10s
      retries: 15

  cassandra-setup:
    image: cassandra:4.1
    container_name: primac_cassandra_setup
    restart: "no"
    depends_on:
      cassandra-db:
        condition: service_healthy
    volumes:
      - ./databases/Primac-Claims-Payments-DB/docker/scripts:/scripts
    entrypoint:
      - sh
      - -c
      - |
        cqlsh cassandra-db -f /scripts/keyspace.local.cql && \
        cqlsh cassandra-db -f /scripts/tables.cql
    networks:
      - primac_network

  cassandra-faker:
    build:
      context: ./databases/Primac-Claims-Payments-DB/faker
      dockerfile: Dockerfile
    container_name: primac_cassandra_faker
    restart: "no"
    depends_on:
      cassandra-setup:
        condition: service_completed_successfully
    environment:
      - PYTHONUNBUFFERED=1
    networks:
      - primac_network

  # ==========================
  # DATA SCIENCE API
  # ==========================
  data-science-api:
    image: yiyi19/primac-data-science-api:latest
    build:
      context: ./services/data_science_api
      dockerfile: Dockerfile
    container_name: primac_data_science_api
    ports:
      - "${DATA_SCIENCE_API_PORT:-8123}:8000"
    environment:
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_DEFAULT_REGION: ${AWS_DEFAULT_REGION}
      S3_BUCKET: ${S3_BUCKET}
      MYSQL_URL: mysql://${MYSQL_USER:-admin}:${MYSQL_PASSWORD:-admin}@mysql-db:3306/${MYSQL_DATABASE:-primac}
      POSTGRES_URL: postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@postgresql-db:5432/${POSTGRES_DB:-primac_postgres}
      CASSANDRA_HOST: cassandra-db
      CASSANDRA_PORT: ${CASSANDRA_PORT:-9042}
    depends_on:
      - mysql-db
      - postgresql-db
      - cassandra-db
    networks:
      - primac_network
    command: uvicorn main:app --host 0.0.0.0 --port 8000

  # ==========================
  # MANAGEMENT TOOLS
  # ==========================
  adminer:
    image: adminer
    container_name: primac_adminer
    restart: always
    ports:
      - "${ADMINER_PORT:-8123}:8080"
    networks:
      - primac_network
    depends_on:
      - mysql-db
      - postgresql-db

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: primac_pgadmin
    ports:
      - "${PGADMIN_PORT:-8123}:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-admin@admin.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - primac_network
    depends_on:
      - postgresql-db

# ==========================
# VOLUMES
# ==========================
volumes:
  mysql_data:
  postgresql_data:
  cassandra_data:
  pgadmin_data:

# ==========================
# NETWORKS
# ==========================
networks:
  primac_network:
    driver: bridge
