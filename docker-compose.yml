version: "3.9"

services:
  # ===== DATABASE SERVICES =====
  
  # MySQL Database (BD_Users_Primac)
  mysql-db:
    build: ./databases/BD_Users_Primac
    container_name: primac_mysql_db
    ports:
      - "3307:3306"
    environment:
      MYSQL_DATABASE: primac
      MYSQL_USER: admin
      MYSQL_PASSWORD: admin
      MYSQL_ROOT_PASSWORD: root
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - primac_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 30s
      timeout: 10s
      retries: 5

  # PostgreSQL Database
  postgresql-db:
    image: postgres:15
    container_name: primac_postgresql_db
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: primac_postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgresql_data:/var/lib/postgresql/data
    networks:
      - primac_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 5

  # PostgreSQL API (proyecto_postgresql)
  postgresql-api:
    build:
      context: ./databases/proyecto_postgresql
      dockerfile: Dockerfile
    container_name: primac_postgresql_api
    ports:
      - "8001:8000"
    networks:
      - primac_network
    depends_on:
      - postgresql-db

  # Cassandra Database (Primac-Claims-Payments-DB)
  cassandra-db:
    image: cassandra:4.1
    container_name: primac_cassandra_db
    ports:
      - "9042:9042"
    environment:
      - CASSANDRA_CLUSTER_NAME=primac-cluster
      - CASSANDRA_NUM_TOKENS=128
      - CASSANDRA_START_RPC=true
    volumes:
      - cassandra_data:/var/lib/cassandra
    networks:
      - primac_network
    healthcheck:
      test: ["CMD", "cqlsh", "-e", "DESCRIBE KEYSPACES"]
      interval: 15s
      timeout: 10s
      retries: 15

  # Cassandra Setup
  cassandra-setup:
    image: cassandra:4.1
    restart: "no"
    depends_on:
      cassandra-db:
        condition: service_healthy
    volumes:
      - ./databases/Primac-Claims-Payments-DB/docker/scripts:/scripts
    entrypoint: ["sh", "-c", "cqlsh cassandra-db -f /scripts/keyspace.local.cql && cqlsh cassandra-db -f /scripts/tables.cql"]
    networks:
      - primac_network

  # ===== APPLICATION SERVICES =====

  # Data Science API (existing service)
  data-science-api:
    build: ./services/data_science_api
    container_name: primac_data_science_api
    ports:
      - "8000:8000"
    environment:
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION}
      - S3_BUCKET=${S3_BUCKET}
    networks:
      - primac_network
    depends_on:
      - mysql-db
      - postgresql-db
      - cassandra-db
    command: uvicorn main:app --host 0.0.0.0 --port 8000

  # ===== MANAGEMENT TOOLS =====

  # Adminer for database management
  adminer:
    image: adminer
    container_name: primac_adminer
    restart: always
    ports:
      - "8081:8080"
    networks:
      - primac_network
    depends_on:
      - mysql-db
      - postgresql-db

  # pgAdmin for PostgreSQL management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: primac_pgadmin
    ports:
      - "8082:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - primac_network
    depends_on:
      - postgresql-db

# ===== VOLUMES =====
volumes:
  mysql_data:
    driver: local
  postgresql_data:
    driver: local
  cassandra_data:
    driver: local
  pgadmin_data:
    driver: local

# ===== NETWORKS =====
networks:
  primac_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
